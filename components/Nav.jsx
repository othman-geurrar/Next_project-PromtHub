"use client";

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/GpEq2nLO17c
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

import Link from "next/link";
import {
  DropdownMenu,
  DropdownMenuTrigger,
  DropdownMenuContent,
  DropdownMenuSeparator,
  DropdownMenuItem,
} from "@/components/ui/dropdown-menu";
import { Avatar, AvatarImage } from "@/components/ui/avatar";
import Image from "next/image";
import { useEffect, useState } from "react";
import { signIn, signOut, useSession, getProviders } from "next-auth/react";

export function Nav() {
  const { data:session } = useSession();
  const [providers, setProviders] = useState(null);
  useEffect(() => {
    const setUpProvider = async () => {
      const response = await getProviders();
      console.log("Providers:", response); // Log providers
      setProviders(response);
    };
    setUpProvider();
  }, []);

  return (
    <header className="flex h-16 w-full items-center justify-between bg-background px-4 sm:px-6">
      <Link href="/" className="flex items-center gap-2" prefetch={false}>
        <Image
          src="/assets/images/logo.svg"
          alt="logo"
          width={30}
          height={30}
          className="object-contain"
        />
        <span className="text-lg font-semibold">Prompt<span className="orange_gradient font-bold">Hub</span></span>
      </Link>
      {session?.user ? (
        <div className="sm:flex hidden items-center gap-4">
          <Link href="/create-prompt" className="orange_btn">
            Create prompt
          </Link>
          <button
            type="button"
            onClick={() => signOut()}
            className="orange_outline_btn"
          >
            Sign Out
          </button>
          <DropdownMenu>
            <DropdownMenuTrigger asChild>
              <button className="rounded-full">
                <Image
                  src={session?.user.image}
                  alt="logo"
                  width={30}
                  height={30}
                  className="object-contain rounded-full"
                />
              </button>
            </DropdownMenuTrigger>
            <DropdownMenuContent align="end" className="bg-white text-black shadow-lg rounded-lg">
              <div className="flex items-center gap-2 p-2">
                <Avatar className="h-8 w-8">
                  <AvatarImage src="/placeholder-user.jpg" />
                  
                </Avatar>
                <div className="grid gap-0.5 leading-none">
                  <div className="font-semibold">{session?.user.name}</div>
                  <div className="text-sm text-muted-foreground">
                    {session?.user.email}
                  </div>
                </div>
              </div>
              <DropdownMenuSeparator />
              <DropdownMenuItem className="hover:bg-slate-100">
                <Link
                  href="/profile"
                  className="flex items-center gap-2 "
                  prefetch={false}
                >
                  <div className="h-4 w-4" />
                  <span>Profile</span>
                </Link>
              </DropdownMenuItem>

              <DropdownMenuSeparator />
            </DropdownMenuContent>
          </DropdownMenu>
        </div>
      ) : (
        <>
          {providers &&
            Object.values(providers).map((provider) => (
              <button
                type="button"
                key={provider.name}
                onClick={() => {
                  signIn(provider.id);
                }}
                className="orange_btn"
              >
                Sign in
              </button>
            ))}
        </>
      )}

      {/* Mobile navigation  */}

      <div className="sm:hidden flex relative">
        {session?.user ? (
          <div className="flex">
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <button className="rounded-full">
                  <Image
                    src={session?.user.image}
                    alt="logo"
                    width={30}
                    height={30}
                    className="object-contain rounded-full"
                  />
                </button>
              </DropdownMenuTrigger>
              <DropdownMenuContent
                align="end"
                className="bg-white text-black shadow-lg rounded-lg"
              >
                <div className="flex items-center gap-2 p-2">
                  <Avatar className="h-8 w-8">
                  </Avatar>
                  <div className="grid gap-0.5 leading-none">
                    <div className="font-semibold">{session?.user.name}</div>
                    <div className="text-sm text-muted-foreground">
                      {session?.user.email}
                    </div>
                  </div>
                </div>
                <DropdownMenuSeparator />
                <DropdownMenuItem className="hover:bg-slate-100">
                  <Link
                    href="/profile"
                    className="flex items-center gap-2"
                    prefetch={false}
                  >
                    <div className="h-4 w-4" />
                    <span>Profile</span>
                  </Link>
                </DropdownMenuItem>

                <DropdownMenuSeparator />
                <DropdownMenuItem className="hover:bg-slate-100">
                  <Link
                    href="/create-prompt"
                    className="flex items-center gap-2 "
                    prefetch={false}
                  >
                    <div className="h-4 w-4" />
                    <span>Create Prompt</span>
                  </Link>
                </DropdownMenuItem>
                <DropdownMenuSeparator />
                <DropdownMenuItem>
                  <button
                    type="button"
                    onClick={() => signOut()}
                    className="w-full orange_btn"
                  >
                    Sign Out
                  </button>
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </div>
        ) : (
          <>
            {providers &&
              Object.values(providers).map((value) => (
                <button
                  type="button"
                  key={value.name}
                  onClick={() => signIn(value.id)}
                  className="orange_btn"
                >
                  Sign In
                </button>
              ))}
          </>
        )}
      </div>
    </header>
  );
}

function XIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>
  );
}
